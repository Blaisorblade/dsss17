DIGEST d311e8a61c83caf5bb200a80707ebb63
FExtract
R531:534 Perm <> <> lib
mod 545:549 <> Sort1
def 561:566 Sort1 insert
R571:573 Coq.Init.Datatypes <> nat ind
R580:583 Coq.Init.Datatypes <> list ind
R585:587 Coq.Init.Datatypes <> nat ind
R602:602 Extract <> l var
R613:615 Coq.Init.Datatypes <> nil constr
R621:622 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R620:620 Extract <> i var
R623:625 Coq.Init.Datatypes <> nil constr
R632:633 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R643:647 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R642:642 Extract <> i var
R669:672 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R673:678 Extract <> insert def
R680:680 Extract <> i var
R656:657 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R655:655 Extract <> i var
R659:660 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
def 700:703 Sort1 sort
R709:712 Coq.Init.Datatypes <> list ind
R714:716 Coq.Init.Datatypes <> nat ind
R721:724 Coq.Init.Datatypes <> list ind
R726:728 Coq.Init.Datatypes <> nat ind
R741:741 Extract <> l var
R752:754 Coq.Init.Datatypes <> nil constr
R759:761 Coq.Init.Datatypes <> nil constr
R768:769 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R775:780 Extract Sort1 insert def
R785:788 Extract <> sort def
R880:883 Extract Sort1 sort def
R1593:1596 Coq.Init.Datatypes <> bool ind
R1646:1649 Coq.Init.Datatypes <> list ind
R1711:1715 Extract Sort1 <> mod
R3157:3162 Coq.ZArith.ZArith <> <> lib
ax 4084:4086 <> int
ax 4215:4217 <> ltb
R4223:4226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4230:4233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4234:4237 Coq.Init.Datatypes <> bool ind
R4227:4229 Extract <> int defax
R4220:4222 Extract <> int defax
ax 4955:4959 <> int2Z
R4965:4968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4969:4969 Coq.Numbers.BinNums <> Z ind
R4962:4964 Extract <> int defax
ax 4980:4985 <> ltb_lt
R5002:5004 Extract <> int defax
R5021:5025 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5014:5016 Coq.Init.Logic <> :type_scope:x_'='_x not
R5007:5009 Extract <> ltb defax
R5013:5013 Extract <> m var
R5011:5011 Extract <> n var
R5017:5020 Coq.Init.Datatypes <> true constr
R5033:5035 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R5026:5030 Extract <> int2Z defax
R5032:5032 Extract <> n var
R5036:5040 Extract <> int2Z defax
R5042:5042 Extract <> m var
prf 6287:6301 <> int_blt_reflect
R6317:6323 Coq.Bool.Bool <> reflect ind
R6346:6348 Extract <> ltb defax
R6352:6352 Extract <> y var
R6350:6350 Extract <> x var
R6333:6335 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6326:6330 Extract <> int2Z defax
R6332:6332 Extract <> x var
R6336:6340 Extract <> int2Z defax
R6342:6342 Extract <> y var
R6385:6395 Coq.Bool.Bool <> iff_reflect thm
R6385:6395 Coq.Bool.Bool <> iff_reflect thm
R6414:6419 Extract <> ltb_lt prfax
R6414:6419 Extract <> ltb_lt prfax
prf 6434:6446 <> Z_eqb_reflect
R6462:6468 Coq.Bool.Bool <> reflect ind
R6477:6481 Coq.ZArith.BinInt Z eqb def
R6485:6485 Extract <> y var
R6483:6483 Extract <> x var
R6472:6472 Coq.Init.Logic <> :type_scope:x_'='_x not
R6471:6471 Extract <> x var
R6473:6473 Extract <> y var
R6518:6528 Coq.Bool.Bool <> iff_reflect thm
R6518:6528 Coq.Bool.Bool <> iff_reflect thm
R6547:6554 Coq.ZArith.BinInt Z eqb_eq thm
R6547:6554 Coq.ZArith.BinInt Z eqb_eq thm
prf 6569:6581 <> Z_ltb_reflect
R6597:6603 Coq.Bool.Bool <> reflect ind
R6612:6616 Coq.ZArith.BinInt Z ltb def
R6620:6620 Extract <> y var
R6618:6618 Extract <> x var
R6607:6607 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6606:6606 Extract <> x var
R6608:6608 Extract <> y var
R6653:6663 Coq.Bool.Bool <> iff_reflect thm
R6653:6663 Coq.Bool.Bool <> iff_reflect thm
R6682:6689 Coq.ZArith.BinInt Z ltb_lt thm
R6682:6689 Coq.ZArith.BinInt Z ltb_lt thm
R7431:7464 Coq.Logic.FunctionalExtensionality <> <> lib
mod 7475:7481 <> IntMaps
def 7495:7503 IntMaps total_map
R7518:7521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7522:7522 Extract <> A var
R7517:7517 Coq.Numbers.BinNums <> Z ind
def 7536:7542 IntMaps t_empty
R7558:7558 Extract <> A var
R7563:7571 Extract IntMaps total_map def
R7573:7573 Extract <> A var
R7589:7589 Extract <> v var
def 7604:7611 IntMaps t_update
R7627:7635 Extract IntMaps total_map def
R7637:7637 Extract <> A var
R7645:7645 Coq.Numbers.BinNums <> Z ind
R7653:7653 Extract <> A var
R7674:7678 Coq.ZArith.BinInt Z eqb def
R7682:7683 Extract <> x' var
R7680:7680 Extract <> x var
R7697:7697 Extract <> m var
R7699:7700 Extract <> x' var
R7690:7690 Extract <> v var
prf 7709:7719 IntMaps t_update_eq
R7736:7744 Extract IntMaps total_map def
R7746:7746 Extract <> A var
R7772:7774 Coq.Init.Logic <> :type_scope:x_'='_x not
R7755:7762 Extract IntMaps t_update def
R7768:7768 Extract <> v var
R7766:7766 Extract <> x var
R7764:7764 Extract <> m var
R7771:7771 Extract <> x var
R7775:7775 Extract <> v var
R7802:7809 Extract IntMaps t_update def
R7826:7827 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R7826:7827 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 7862:7873 IntMaps t_update_neq
R7906:7914 Extract IntMaps total_map def
R7916:7916 Extract <> X var
R7930:7934 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7955:7957 Coq.Init.Logic <> :type_scope:x_'='_x not
R7936:7943 Extract IntMaps t_update def
R7950:7950 Extract <> v var
R7947:7948 Extract <> x1 var
R7945:7945 Extract <> m var
R7953:7954 Extract <> x2 var
R7958:7958 Extract <> m var
R7960:7961 Extract <> x2 var
R7924:7927 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7922:7923 Extract <> x1 var
R7928:7929 Extract <> x2 var
R7988:7995 Extract IntMaps t_update def
R8013:8014 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8013:8014 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 8047:8061 IntMaps t_update_shadow
R8078:8086 Extract IntMaps total_map def
R8088:8088 Extract <> A var
R8135:8138 Coq.Init.Logic <> :type_scope:x_'='_x not
R8104:8111 Extract IntMaps t_update def
R8133:8134 Extract <> v2 var
R8131:8131 Extract <> x var
R8114:8121 Extract IntMaps t_update def
R8127:8128 Extract <> v1 var
R8125:8125 Extract <> x var
R8123:8123 Extract <> m var
R8139:8146 Extract IntMaps t_update def
R8152:8153 Extract <> v2 var
R8150:8150 Extract <> x var
R8148:8148 Extract <> m var
R8180:8187 Extract IntMaps t_update def
R8225:8226 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8225:8226 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8248:8254 Extract IntMaps <> mod
mod 8399:8409 <> SearchTree2
sec 8420:8424 SearchTree2 TREES
var 8436:8436 SearchTree2.TREES V
var 8455:8461 SearchTree2.TREES default
R8464:8464 Extract <> SearchTree2.TREES.V var
def 8479:8481 SearchTree2 key
R8486:8488 Extract <> int defax
ind 8502:8505 SearchTree2 tree
constr 8520:8520 SearchTree2 E
constr 8532:8532 SearchTree2 T
R8524:8527 Extract <> tree ind
R8539:8542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8546:8549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8551:8554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8559:8562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8563:8566 Extract <> tree ind
R8555:8558 Extract <> tree ind
R8550:8550 Extract <> SearchTree2.TREES.V var
R8543:8545 Extract SearchTree2 key def
R8535:8538 Extract <> tree ind
def 8581:8590 SearchTree2 empty_tree
R8594:8597 Extract SearchTree2 tree ind
R8602:8602 Extract SearchTree2 E constr
def 8615:8620 SearchTree2 lookup
R8626:8628 Extract SearchTree2 key def
R8636:8639 Extract SearchTree2 tree ind
R8644:8644 Extract <> SearchTree2.TREES.V var
R8657:8657 Extract <> t var
R8668:8668 Extract SearchTree2 E constr
R8673:8679 Extract <> SearchTree2.TREES.default var
R8685:8685 Extract SearchTree2 T constr
R8703:8705 Extract <> ltb defax
R8707:8707 Extract <> x var
R8762:8764 Extract <> ltb defax
R8768:8768 Extract <> x var
R8775:8780 Extract <> lookup def
R8782:8782 Extract <> x var
R8716:8721 Extract <> lookup def
R8723:8723 Extract <> x var
def 8836:8841 SearchTree2 insert
R8847:8849 Extract SearchTree2 key def
R8856:8856 Extract <> SearchTree2.TREES.V var
R8863:8866 Extract SearchTree2 tree ind
R8871:8874 Extract SearchTree2 tree ind
R8886:8886 Extract <> s var
R8897:8897 Extract SearchTree2 E constr
R8902:8902 Extract SearchTree2 T constr
R8910:8910 Extract SearchTree2 E constr
R8908:8908 Extract <> v var
R8906:8906 Extract <> x var
R8904:8904 Extract SearchTree2 E constr
R8915:8915 Extract SearchTree2 T constr
R8933:8935 Extract <> ltb defax
R8937:8937 Extract <> x var
R9002:9004 Extract <> ltb defax
R9008:9008 Extract <> x var
R9068:9068 Extract SearchTree2 T constr
R9074:9074 Extract <> v var
R9072:9072 Extract <> x var
R9015:9015 Extract SearchTree2 T constr
R9025:9030 Extract <> insert def
R9034:9034 Extract <> v var
R9032:9032 Extract <> x var
R8946:8946 Extract SearchTree2 T constr
R8949:8954 Extract <> insert def
R8958:8958 Extract <> v var
R8956:8956 Extract <> x var
def 9094:9102 SearchTree2 elements'
R9108:9111 Extract SearchTree2 tree ind
R9121:9124 Coq.Init.Datatypes <> list ind
R9130:9130 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R9127:9129 Extract SearchTree2 key def
R9131:9131 Extract <> SearchTree2.TREES.V var
R9137:9140 Coq.Init.Datatypes <> list ind
R9146:9148 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R9143:9145 Extract SearchTree2 key def
R9149:9149 Extract <> SearchTree2.TREES.V var
R9162:9162 Extract <> s var
R9172:9172 Extract SearchTree2 E constr
R9177:9180 Extract <> base var
R9185:9185 Extract SearchTree2 T constr
R9198:9206 Extract <> elements' def
R9216:9219 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9211:9211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9213:9213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9215:9215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9220:9228 Extract <> elements' def
R9232:9235 Extract <> base var
def 9256:9263 SearchTree2 elements
R9269:9272 Extract SearchTree2 tree ind
R9277:9280 Coq.Init.Datatypes <> list ind
R9286:9288 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R9283:9285 Extract SearchTree2 key def
R9289:9289 Extract <> SearchTree2.TREES.V var
R9295:9303 Extract SearchTree2 elements' def
R9307:9309 Coq.Init.Datatypes <> nil constr
R9305:9305 Extract <> s var
def 9324:9330 SearchTree2 combine
R9344:9344 Coq.Numbers.BinNums <> Z ind
R9355:9363 Extract IntMaps total_map def
R9365:9365 Extract <> A var
R9370:9378 Extract IntMaps total_map def
R9380:9380 Extract <> A var
R9399:9403 Coq.ZArith.BinInt Z ltb def
R9407:9411 Extract <> pivot var
R9405:9405 Extract <> x var
R9429:9430 Extract <> m2 var
R9432:9432 Extract <> x var
R9419:9420 Extract <> m1 var
R9422:9422 Extract <> x var
ind 9446:9448 SearchTree2 Abs
constr 9485:9489 SearchTree2 Abs_E
constr 9518:9522 SearchTree2 Abs_T
R9456:9459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9471:9474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9460:9468 Extract IntMaps total_map def
R9470:9470 Extract <> SearchTree2.TREES.V var
R9452:9455 Extract SearchTree2 tree ind
R9492:9494 Extract <> Abs ind
R9499:9505 Extract IntMaps t_empty def
R9507:9513 Extract <> SearchTree2.TREES.default var
R9496:9496 Extract SearchTree2 E constr
R9558:9567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9575:9584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9585:9587 Extract <> Abs ind
R9603:9610 Extract IntMaps t_update def
R9646:9646 Extract <> v var
R9637:9641 Extract <> int2Z defax
R9643:9643 Extract <> k var
R9613:9619 Extract SearchTree2 combine def
R9633:9633 Extract <> b var
R9631:9631 Extract <> a var
R9622:9626 Extract <> int2Z defax
R9628:9628 Extract <> k var
R9590:9590 Extract SearchTree2 T constr
R9598:9598 Extract <> r var
R9596:9596 Extract <> v var
R9594:9594 Extract <> k var
R9592:9592 Extract <> l var
R9568:9570 Extract <> Abs ind
R9574:9574 Extract <> b var
R9572:9572 Extract <> r var
R9551:9553 Extract <> Abs ind
R9557:9557 Extract <> a var
R9555:9555 Extract <> l var
prf 9659:9675 SearchTree2 empty_tree_relate
R9678:9680 Extract SearchTree2 Abs ind
R9694:9700 Extract IntMaps t_empty def
R9702:9708 Extract <> SearchTree2.TREES.default var
R9682:9691 Extract SearchTree2 empty_tree def
prf 9793:9805 SearchTree2 lookup_relate
R9838:9841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9852:9855 Coq.Init.Logic <> :type_scope:x_'='_x not
R9842:9847 Extract SearchTree2 lookup def
R9851:9851 Extract <> t var
R9849:9849 Extract <> k var
R9856:9858 Extract <> cts var
R9861:9865 Extract <> int2Z defax
R9867:9867 Extract <> k var
R9829:9831 Extract SearchTree2 Abs ind
R9835:9837 Extract <> cts var
R9833:9833 Extract <> t var
prf 10029:10041 SearchTree2 insert_relate
R10076:10083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10084:10086 Extract SearchTree2 Abs ind
R10104:10111 Extract IntMaps t_update def
R10127:10127 Extract <> v var
R10118:10122 Extract <> int2Z defax
R10124:10124 Extract <> k var
R10113:10115 Extract <> cts var
R10089:10094 Extract SearchTree2 insert def
R10100:10100 Extract <> t var
R10098:10098 Extract <> v var
R10096:10096 Extract <> k var
R10067:10069 Extract SearchTree2 Abs ind
R10073:10075 Extract <> cts var
R10071:10071 Extract <> t var
prf 10306:10338 SearchTree2 unrealistically_strong_can_relate
R10353:10359 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10363:10364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10365:10367 Extract SearchTree2 Abs ind
R10371:10373 Extract <> cts var
R10369:10369 Extract <> t var
R10497:10501 Extract SearchTree2.TREES <> sec
R10992:11002 Extract SearchTree2 <> mod
R13469:13478 SearchTree <> <> lib
mod 13488:13498 <> Experiments
def 13534:13543 Experiments empty_tree
R13548:13568 SearchTree <> empty_tree def
R13570:13572 Coq.Init.Datatypes <> nat ind
def 13586:13591 Experiments insert
R13596:13612 SearchTree <> insert def
R13614:13616 Coq.Init.Datatypes <> nat ind
def 13630:13635 Experiments lookup
R13640:13656 SearchTree <> lookup def
R13658:13660 Coq.Init.Datatypes <> nat ind
def 13676:13676 Experiments E
R13681:13692 SearchTree <> E constr
R13694:13696 Coq.Init.Datatypes <> nat ind
def 13710:13710 Experiments T
R13715:13726 SearchTree <> T constr
R13728:13730 Coq.Init.Datatypes <> nat ind
R13825:13828 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R13739:13744 Extract Experiments insert def
R13751:13756 Extract Experiments insert def
R13763:13768 Extract Experiments insert def
R13775:13780 Extract Experiments insert def
R13787:13792 Extract Experiments insert def
R13799:13804 Extract Experiments insert def
R13810:13819 Extract Experiments empty_tree def
R13829:13829 Extract Experiments E def
R13844:13844 Extract Experiments E def
R13859:13859 Extract Experiments T def
R13844:13844 Extract Experiments E def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R13859:13859 Extract Experiments T def
R14369:14379 Extract Experiments <> mod
